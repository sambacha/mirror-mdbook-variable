stages:
  - build 
  - optional-builds

build:
  image: "rust:latest"
  stage: build
  variables:
    CARGO_HOME: "cargohome"
  cache:
    paths:
      - target
      - cargohome
    key: build_cache
  before_script:
    - mkdir -p $CARGO_HOME && echo "using $CARGO_HOME to cache cargo deps"
    - cargo install cargo-tarpaulin  
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo tarpaulin --all-features --out Lcov
    - bash <(curl -s https://codecov.io/bash) -Z
  only:
    changes:
      - Cargo.toml
      - .gitlab-ci.yml
      - src/**/*
      - tests/**/*
      - benches/**/*
      - examples/**/*

# -- optional build

.optional-release: &optional-release
    stage: optional-builds
    except:
        - schedules
    when: manual

optional-release:linux:
    <<: *optional-release
    image: "rust:latest"
    script:
        - cargo build --verbose --release
        - cp target/release/mdbook-variables $CI_PROJECT_DIR
    artifacts:
        paths:
            - mdbook-variables

optional-release:windows:
    <<: *optional-release

    image: "rust:latest"
    script:
        - apt update
        - apt-get install -yqq --no-install-recommends gcc-mingw-w64
        - rustup target add x86_64-pc-windows-gnu
        # this works tanks for .cargo/config
        - cargo build --verbose --target=x86_64-pc-windows-gnu --release
        - cp target/x86_64-pc-windows-gnu/release/mdbook-variables.exe $CI_PROJECT_DIR
    artifacts:
        paths:
            - mdbook-variables.exe

optional-release:osx:
    <<: *optional-release
    image: "joseluisq/rust-linux-darwin-builder:1.54.0"
    script:
      - cp /root/.cargo/config "$CARGO_HOME/"
      - cargo build --target x86_64-apple-darwin --release
      - cp target/x86_64-apple-darwin/release/mdbook-variables $CI_PROJECT_DIR/mdbook-variables-osx
    artifacts:
        paths:
            - mdbook-variables-osx

# --

