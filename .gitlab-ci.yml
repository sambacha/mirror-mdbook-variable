stages:
  - generate_test_data
  - coverage_report
  - upload_report
  - optional-builds

# Use cargo to generete test data the project
generate_test_data:
  image: "rust:latest"
  stage: generate_test_data
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo test --no-run
  artifacts:
    paths:
      - target/debug/*-*
    expire_in: 30 minutes
  only:
    changes:
      - Cargo.toml
      - src/**/*
      - tests/**/*
      - benches/**/*
      - examples/**/*

# Run tests and generate coverage report
coverage_report:
  image:
    name: "ragnaroek/kcov_head:latest"
    #entrypoint: ["/bin/sh", "-c"]
    entrypoint: [""]
  stage: "coverage_report"
  script:
    - ls target/debug/ || echo "notfound"
    - for file in $(ls -1 target/debug | grep "-" | grep -v "\.d$");
        do
          mkdir -p "target/cov/$(basename $file)";
          kcov --exclude-pattern=/.cargo,/usr/lib
            --verify "target/cov/$(basename $file)"
            "target/debug/$file";
        done
  artifacts:
    paths:
      - target/cov/*
    expire_in: 30 minutes
  only:
    changes:
      - Cargo.toml
      - src/**/*
      - tests/**/*

upload_report:
  image: "centos:latest"
  stage: "upload_report"
  script:
    - bash <(curl -s https://codecov.io/bash) -Z
  allow_failure : true
  only:
    changes:
      - Cargo.toml
      - src/**/*
      - tests/**/*




# -- optional build

.optional-release: &optional-release
    stage: optional-builds
    except:
        - schedules
    when: manual

optional-release:linux:
    <<: *optional-release
    image: "rust:latest"
    script:
        - cargo build --verbose --release
        - cp target/release/mdbook-variables $CI_PROJECT_DIR
    artifacts:
        paths:
            - mdbook-variables

optional-release:windows:
    <<: *optional-release

    image: "rust:latest"
    script:
        - apt install mingw-w64 --allow-yes
        - rustup target add x86_64-pc-windows-gnu
        - cargo build --verbose --target=x86_64-pc-windows-gnu --release
        - cp target/release/mdbook-variables.exe $CI_PROJECT_DIR
    artifacts:
        paths:
            - mdbook-variables

optional-release:osx:
    <<: *optional-release

    image: "rust:latest"
    script:
        - rustup target add x86_64-apple-darwin  
        - cargo build --target x86_64-apple-darwin --release
        - cp target/release/mdbook-variables $CI_PROJECT_DIR/mdbook-variables-osx
    artifacts:
        paths:
            - mdbook-variables-osx

# --

